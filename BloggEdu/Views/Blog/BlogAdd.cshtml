@model EntityLayer.Concrete.Blog
@{
    ViewData["Title"] = "BlogAdd";
    Layout = "~/Views/Shared/WriterLayout.cshtml";
}


<h1>Yeni Blog Girişi</h1>
<br />
@* @using (Html.BeginForm("BlogAdd", "Blog", FormMethod.Post)) *@
<form class="form-group" method="post" enctype="multipart/form-data">

    @Html.Label("Blog Başlığı")
    @Html.TextBoxFor(x => x.BlogTitle, new { @class = "form-control" , @required="required" })
    @Html.ValidationMessageFor(x => x.BlogTitle, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Blog Görseli")
    @Html.TextBoxFor(x=>x.BlogImage, new {@class="form-control"} )
    @Html.ValidationMessageFor(x=>x.BlogImage)
    <br />
    @Html.Label("Blog Küçük Görsel")
    @Html.TextBoxFor(x=>x.BlogThumbnailImage, new {@class="form-control"} )
    @Html.ValidationMessageFor(x=>x.BlogThumbnailImage)
    <br />
    @Html.Label("Kategori")
    @Html.DropDownListFor(x=>x.CategoryID,(List<SelectListItem>)ViewBag.cv,new{@class ="form-control"})
    <br />
   @*  <textarea id="blogContent" name="BlogContent"></textarea> *@
    <div id="blogContent" name="BlogContent"></div>
    @Html.ValidationMessageFor(x => x.BlogContent, "", new { @class = "text-danger" })
    <br />
    <button class="btn btn-info">Yazıyı Kaydet</button>
</form>

<script src="https://cdn.tiny.cloud/1/no-api-key/tinymce/5/tinymce.min.js"></script>
<script>
    tinymce.init({
        selector: 'div#blogContent',
        plugins: 'advlist autolink lists link image charmap print preview anchor',
        toolbar: 'undo redo | formatselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
        image_advtab: true, // Resimler için gelişmiş sekme göster
        image_title: true, // Resimlere başlık ekleme
        image_caption: true, // Resimlere altyazı ekleme
        image_dimensions: true, // Resim boyutları düzenleme
        image_class_list: [
            { title: 'None', value: '' }, // Resimler için sınıf seçeneği
            { title: 'Responsive', value: 'img-responsive' } // Örnek bir sınıf
        ],
        file_picker_types: 'image', // Yalnızca resim dosyalarına izin ver
        file_picker_callback: function (callback, value, meta) {
            if (meta.filetype === 'image') {
                var input = document.createElement('input');
                input.setAttribute('type', 'file');
                input.setAttribute('accept', 'image/*');

                input.onchange = function () {
                    var file = this.files[0];

                    var reader = new FileReader();
                    reader.readAsDataURL(file);

                    reader.onload = function () {
                        var img = new Image();
                        img.src = reader.result;

                        img.onload = function () {
                            var width = img.width;
                            var height = img.height;

                            // Resmi düzenleme penceresini aç
                            callback(reader.result, {
                                alt: '',
                                width: width,
                                height: height
                            });
                        };
                    };
                };

                input.click();
            }
        }
    });
</script>




